language: "zh"

pipeline:
- name: "JiebaTokenizer"
#- name: "chatbot_nlu.extractors.crf_entity_extractor.CRFEntityExtractor"

# ner
- name: "chatbot_nlu.extractors.jieba_pseg_extractor.JiebaPsegExtractor"
#  part_of_speech: ["address", "name", "organization", "position", "time", "goverment", "book", "scene", "movie", "company"]
  part_of_speech: ["nr"]

- name: "chatbot_nlu.extractors.bilstm_crf_entity_extractor.BilstmCRFEntityExtractor"


# Word Embedding
- name: "chatbot_nlu.featurizers.bert_vectors_featurizer.BertVectorsFeaturizer"
  ip: "172.18.103.43"
#  ip: "172.16.19.74"
  port: 5555
  port_out: 5556
  show_server_config: True
  timeout: 10000
  check_version: False

# Single intent
- name: "chatbot_nlu.classifiers.embedding_bert_intent_classifier.EmbeddingBertIntentClassifier"
#- name: "chatbot_nlu.classifiers.embedding_bert_intent_estimator_classifier.EmbeddingBertIntentEstimatorClassifier"
#- name: "chatbot_nlu.classifiers.keyword_intent_classifier.KeywordIntentClassifier"  # 关键词提取意图

# Multi Intent
#- name: "intent_featurizer_count_vectors"
#- name: "intent_classifier_tensorflow_embedding"
#  intent_tokenization_flag: true          # 告诉模型这是多意图，需要根据占位符进行意图切分
#  intent_split_symbol: "+"


# Sentiment
#- name: "chatot_nlu.classifiers.embedding_bert_sentiment_classifier.EmbeddingBertSentimentClassifier"

policies:     # 对话策略 引入强化学习 DDQ -> DQN
#  - name: "chatbot_dm.policy.attention_policy.AttentionPolicy"
  - name: EmbeddingPolicy
#  - name: KerasPolicy
    epochs: 2
    featurizer:
    - name: FullDialogueTrackerFeaturizer
#    - name: MaxHistoryTrackerFeaturizer
#      max_history: 5    # This controlls how mach dialogue history the model looks at to decide which action to take
      state_featurizer:
        - name: LabelTokenizerSingleStateFeaturizer
    config_proto: {
      "inter_op_parallelism_threads": 0,
      "intra_op_parallelism_threads": 0,
      "allow_growth": True,
      "visible_device_list": "0,1"
    }


  - name: MappingPolicy       # 处理局部意图情况


  - name: FallbackPolicy
    fallback_action_name: "action_default_fallback"
    nlu_threshold: 0
    core_threshold: 0

#  - name: TwoStageFallbackPolicy
#    nlu_threshold: 0.5
#    core_threshold: 0.5
#    ambiguity_threshold: 0.1      # highest - second > 0.1
#    fallback_action_name: "action_default_fallback"

  - name: MemoizationPolicy  # 记忆对话模型训练数据，并且从训练数据中预测next_action， 如果存在则预测为1.0， 否则为0。0
    max_history: 3